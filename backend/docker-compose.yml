version: "3.8"
services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.2
    container_name: offer_hub_elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200/_cluster/health | grep -q '\"status\":\"green\"' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - offer_hub_network
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data

  offer_hub_database:
    image: postgres:15
    container_name: offer_hub_database
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: offer_hub_database
    ports:
      - "5432:5432"
    volumes:
      - offer_hub_db_data:/var/lib/postgresql/data
    networks:
      - offer_hub_network

  offer_hub_hasura:
    image: hasura/graphql-engine:v2.40.0
    container_name: offer_hub_hasura
    restart: always
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://offerhub_admin:offerhub_pass@offer_hub_database:5432/offer_hub_database
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_ADMIN_SECRET: offerhub_secret
    depends_on:
      - offer_hub_database
    ports:
      - "8080:8080"
    networks:
      - offer_hub_network

  offer_hub_backend:
    build: .
    container_name: offer_hub_backend
    restart: always
    environment:
      DATABASE_HOST: offer_hub_database
      DATABASE_PORT: 5432
      DATABASE_USER: offerhub_admin
      DATABASE_PASSWORD: offerhub_pass
      DATABASE_NAME: offer_hub_database
      ELASTICSEARCH_HOST: elasticsearch
      ELASTICSEARCH_PORT: 9200
    depends_on:
      offer_hub_database:
        condition: service_started
      elasticsearch:
        condition: service_healthy
    ports:
      - "3001:3001"
    networks:
      - offer_hub_network

  redis:
    image: redis:6
    container_name: redis_cache
    ports:
      - "6379:6379"
    restart: always
    networks:
      - offer_hub_network

  offer_hub_minio:
    image: minio/minio
    container_name: offer_hub_minio
    restart: always
    ports:
      - "9000:9000" # MinIO API
      - "9001:9001" # Web Console
    environment:
      MINIO_ROOT_USER: offerhub_minio
      MINIO_ROOT_PASSWORD: offerhub_minio_secret
    volumes:
      - offer_hub_minio_data:/data
    command: server --console-address ":9001" /data
    networks:
      - offer_hub_network

  prometheus:
    image: prom/prometheus
    ports:
      - '9090:9090'
    volumes:
      - ./prometheus:/etc/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    restart: always

  grafana:
    image: grafana/grafana
    ports:
      - '3002:3002'
    environment:
      - GF_SERVER_HTTP_PORT=3002
    depends_on:
      - prometheus
    restart: always

  offer_hub_server:
    image: httpd:2.4
    ports:
      - '80:80'
    restart: always

volumes:
  offer_hub_db_data: {}
  offer_hub_minio_data: {}
  elasticsearch_data: {}

networks:
  offer_hub_network:
    driver: bridge
